<mxfile modified="2020-11-27T16:27:42.740Z" host="app.diagrams.net" agent="5.0 (Windows)" etag="Q041DLZMFsfAU6i3YE16" version="13.10.4" type="github">
  <diagram id="Ht1M8jgEwFfnCIfOTk4-" name="Page-1">
    <mxGraphModel dx="910" dy="487" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="oRE_mYbqo-P45fYyQHj--1" value="&lt;h1 align=&quot;justify&quot;&gt;README&lt;/h1&gt;&lt;p align=&quot;justify&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;The client&#39;s main concern was the solution&#39;s cost and the &lt;font style=&quot;font-size: 18px&quot;&gt;possibility for his customers to set their own domains on the blog and, in the future, allowing them to download the generated pages to integrate them on their website.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;The second main point was to be SEO friendly, so no dynamically fetched data.&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;We chosed the NextJS framework that allows to generate static html page from ReactJS pages with data pre-fetching.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;justify&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;On AWS side we would trigger a Lambda function on DynamoDB Stream that will put a job in a standard SQS queue.&amp;nbsp; Another Lambda, triggered every 5 minutes by a CloudWatch CRON, would then execute the page compilation, upload on S3 the result and then invalidate CloudFront for the concerned page.&lt;br&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="40" y="150" width="490" height="450" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
